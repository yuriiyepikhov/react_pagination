{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","visiblePagesCount","Math","ceil","visiblePages","_jsxs","className","children","_jsx","cn","disabled","href","onClick","toPrevPage","map","visiblePage","active","concat","toNextPage","items","App","setPerPage","useState","setCurrentPage","startIndex","endIndex","length","visibleItems","slice","visibleItemsText","id","value","onChange","option","target","oneOption","htmlFor","page","visibleItem","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,CACT,C,2BCEO,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAoBC,KAAKC,KAAKN,EAAQC,GACtCM,EAAef,EAAW,EAAGY,GAcnC,OACEI,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MACEF,UAAWG,IACT,YACA,CAAEC,SAA0B,IAAhBX,IACZQ,SAEFC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QAzBWC,KACG,IAAhBd,GACFC,EAAaD,EAAc,EAC7B,EAsB0BQ,SACrB,WAKFH,EAAaU,KAAIC,GAChBP,cAAA,MAEEF,UAAWG,IACT,YACA,CAAEO,OAAQD,IAAgBhB,IAC1BQ,SAEFC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,IAAMZ,EAAae,GAAaR,SAExCQ,KAZEA,KAiBTP,cAAA,MACEF,UAAWG,IACT,YACA,CAAEC,SAAUX,IAAgBE,IAC5BM,SAEFC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeZ,IAAgBE,EAC/BW,QAvDWM,KACbnB,IAAgBE,GAClBD,EAAaD,EAAc,EAC7B,EAoD0BQ,SACrB,aAIA,EChFHY,EAAQ9B,EAAW,EAAG,IACzByB,KAAIrB,GAAC,QAAAwB,OAAYxB,KAEP2B,EAAgBA,KAC3B,MAAOtB,EAASuB,GAAcC,mBAAiB,IACxCvB,EAAawB,GAAkBD,mBAAiB,GAIjDE,GAAsBzB,EAAc,GAAKD,EAC/C,IAAI2B,GAAoB1B,EAAc,GAAKD,EAAUA,EAEjD2B,EAAWN,EAAMO,SACnBD,EAAWN,EAAMO,QAGnB,MAAMC,EAAeR,EAAMS,MAAMJ,EAAYC,GAEvCI,EAAgB,QAAAZ,OACVlB,EAAW,YAAAkB,OAAWO,EAAa,EAAC,OAAAP,OAAMQ,EAAQ,QAAAR,OAAOE,EAAMO,OAAM,KAEjF,OACErB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAC/BsB,IAGHxB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRsB,GAAG,kBACHxB,UAAU,eACVyB,MAAOjC,EACPkC,SAAUC,IACRZ,GAAYY,EAAOC,OAAOH,OAC1BR,EAAe,EAAE,EACjBhB,SAhCqB,CAAC,EAAG,EAAG,GAAI,IAkClBO,KAAIqB,GAClB3B,cAAA,UAEEuB,MAAOI,EAAU5B,SAEhB4B,GAHIA,SASb3B,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACb,EAAU,CACTE,MAAOsB,EAAMO,OACb5B,QAASA,EACTC,YAAaA,EACbC,aAAeqC,GAASd,EAAec,KAGzC7B,cAAA,MAAAD,SACGoB,EAAab,KAAIwB,GAChB9B,cAAA,MAEE,UAAQ,OAAMD,SAEb+B,GAHIA,SAOP,EC5EVC,IAASC,OAAOhC,cAACY,EAAG,IAAKqB,SAASC,eAAe,Q","file":"static/js/main.310d2e52.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (param: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const visiblePagesCount = Math.ceil(total / perPage);\n  const visiblePages = getNumbers(1, visiblePagesCount);\n\n  const toPrevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const toNextPage = () => {\n    if (currentPage !== visiblePagesCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={toPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {visiblePages.map(visiblePage => (\n        <li\n          key={visiblePage}\n          className={cn(\n            'page-item',\n            { active: visiblePage === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${visiblePage}`}\n            onClick={() => onPageChange(visiblePage)}\n          >\n            {visiblePage}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === visiblePagesCount },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === visiblePagesCount}\n          onClick={toNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const perPageOptions: number[] = [3, 5, 10, 20];\n\n  const startIndex: number = (currentPage - 1) * perPage;\n  let endIndex: number = (currentPage - 1) * perPage + perPage;\n\n  if (endIndex > items.length) {\n    endIndex = items.length;\n  }\n\n  const visibleItems = items.slice(startIndex, endIndex);\n\n  const visibleItemsText\n    = `Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {visibleItemsText}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={option => {\n              setPerPage(+option.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            {perPageOptions.map(oneOption => (\n              <option\n                key={oneOption}\n                value={oneOption}\n              >\n                {oneOption}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map(visibleItem => (\n          <li\n            key={visibleItem}\n            data-cy=\"item\"\n          >\n            {visibleItem}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}